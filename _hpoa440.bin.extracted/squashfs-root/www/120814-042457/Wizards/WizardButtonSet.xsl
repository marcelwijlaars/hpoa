<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
				xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
				xmlns:fn="http://www.w3.org/2005/02/xpath-functions"
        xmlns:hpoa="hpoa.xsd">

	<!--
		(C) Copyright 2006-2014 Hewlett-Packard Development Company, L.P.
	-->
	
	<xsl:template name="wizardButtonSet">
        
		<xsl:param name="nextStepNumber" />
		<xsl:param name="nextStepType" select="'location'" />
		<xsl:param name="linkNext" />
		<xsl:param name="skipStepNumber" select="''" />
		
		<xsl:param name="displayPrevious" select="'true'" />
		<xsl:param name="displaySkip" select="'false'" />
		<xsl:param name="displayNext" select="'true'" />
		<xsl:param name="displayCancel" select="'true'" />
		<xsl:param name="displayFinish" select="'false'" />
    
		<!--
			Wrap the buttons in a table so they stay together when the page dynamically changes size (Mozilla fix).
		-->
		<table width="100%" cellpadding="0" cellspacing="0"><tr><td>
		<!--
			Bottom navigation button set wrapper
			5 pixel top margin is used to space the buttons properly beneath the horizontal rule.
		-->
		<div class="buttonSet" id="wizardButtonSet" style="margin-top:5px;" >
			
			<!-- Finish Button -->
			<xsl:if test="$displayFinish='true'">
        <xsl:call-template name="wizardButton">
          <xsl:with-param name="id" select="'finishButton'" />
          <xsl:with-param name="wrapperClass" select="'bWrapperUp bEmphasized'" />
          <xsl:with-param name="buttonText" select="$stringsDoc//value[@key='finish']" />
          <xsl:with-param name="onclick" select="'exitWizard(false);'" />
        </xsl:call-template>
			</xsl:if>
			
			<!-- Cancel Button -->
			<xsl:if test="$displayCancel='true'">
        <xsl:call-template name="wizardButton">
          <xsl:with-param name="id" select="'cancelButton'" />
          <xsl:with-param name="wrapperClass" select="'bWrapperUp'" />
          <xsl:with-param name="buttonText" select="$stringsDoc//value[@key='cancel']" />
          <xsl:with-param name="onclick" select="'exitWizard(true);'" />
        </xsl:call-template>
			</xsl:if>
			
			<!-- Skip Button -->
			<!--
				Skip button must always be added to the page. Unlike the other buttons,
				the Skip button's style is set to display:none. This is so that the next
				button can use it's onclick handler to navigate to the next step in the
				wizard
			-->
      <xsl:call-template name="wizardButton">
        <xsl:with-param name="id" select="'skipButton'" />
        <xsl:with-param name="wrapperClass" select="'bWrapperUp'" />
        <xsl:with-param name="wrapperStyle">
				  <xsl:choose>
					  <xsl:when test="$displaySkip='true'">margin-left:40px;</xsl:when>
					  <xsl:otherwise>display:none;</xsl:otherwise>
				  </xsl:choose>        
        </xsl:with-param>
        <xsl:with-param name="buttonText" select="$stringsDoc//value[@key='skip']" />
        <xsl:with-param name="onclick" select="concat('javascript:location=pathFix(', &quot;'&quot;, '/120814-042457/Wizards/wizardContainerPage.html?step=', $skipStepNumber, &quot;'&quot;, ');')" />
      </xsl:call-template>
			
			<!-- Next Button -->		
			<xsl:if test="$displayNext='true'">
        <xsl:call-template name="wizardButton">
          <xsl:with-param name="id" select="'nextButton'" />
          <xsl:with-param name="wrapperClass" select="'bWrapperUp bEmphasized'" />
          <xsl:with-param name="buttonText">
            <xsl:call-template name="adjustButtonText">
              <xsl:with-param name="stringKey" select="'next'" />
            </xsl:call-template>
          </xsl:with-param>
        </xsl:call-template>
			</xsl:if>
			
			<!-- Previous Button -->
			<xsl:if test="$displayPrevious='true'">
        <xsl:call-template name="wizardButton">
          <xsl:with-param name="id" select="'previousButton'" />
          <xsl:with-param name="wrapperClass" select="'bWrapperUp'" />
          <xsl:with-param name="buttonText">
            <xsl:call-template name="adjustButtonText">
              <xsl:with-param name="stringKey" select="'previous'" />
            </xsl:call-template>
          </xsl:with-param>
        </xsl:call-template>
			</xsl:if>
			
		</div> <!-- End button set -->
		<div class="clearFloats"></div>
		
		</td></tr></table>

		<xsl:element name="input">
			<xsl:attribute name="type">hidden</xsl:attribute>
			<xsl:attribute name="id">nextStepLink</xsl:attribute>
			<xsl:attribute name="value">javascript:location=pathFix('/120814-042457/Wizards/wizardContainerPage.html?step=<xsl:value-of select="$nextStepNumber" />');</xsl:attribute>
		</xsl:element>
		
	</xsl:template>


  <!-- 
    @purpose  : button set generated by steps document node data
    @notes    : steps document may be modified in memory to adjust button attributes at runtime. 
  -->
  <xsl:template name="wizardStepsDocButtonSet">
    <xsl:param name="curStep" />
    <xsl:param name="nextStep" />
    <xsl:param name="stepsDoc" />
    
    <table width="100%" cellpadding="0" cellspacing="0">
      <tr>
        <td>
          <div class="buttonSet" id="wizardButtonSet" style="margin-top:5px;" >

            <xsl:for-each select="$stepsDoc//step[number=$curStep]/buttons/button">
              
              <!-- call button template for each button definition for this step -->
              <xsl:call-template name="wizardButton">
                <xsl:with-param name="id" select="@id" />
                <xsl:with-param name="wrapperClass">bWrapperUp<xsl:if test="@focus='true'"> bEmphasized</xsl:if></xsl:with-param>
                <xsl:with-param name="buttonText">
                  <xsl:call-template name="adjustButtonText">
                    <xsl:with-param name="stringKey" select="@stringKey" />
                  </xsl:call-template>
                </xsl:with-param>               
                <xsl:with-param name="wrapperStyle">
                  <xsl:choose>
                    <xsl:when test="not(@style)"></xsl:when>
                    <xsl:otherwise><xsl:value-of select="@style" /></xsl:otherwise>
                  </xsl:choose>                    
                </xsl:with-param>
                <xsl:with-param name="disabled" select="@disabled" />
                <xsl:with-param name="onclick" select="@method" />              
              </xsl:call-template>
            </xsl:for-each>
            
          </div>
          <div class="clearFloats"></div>
        </td>
      </tr>
    </table>

    <xsl:element name="input">
      <xsl:attribute name="type">hidden</xsl:attribute>
      <xsl:attribute name="id">nextStepLink</xsl:attribute>
      <xsl:attribute name="value">javascript:location=pathFix('/120814-042457/Wizards/wizardContainerPage.html?step=<xsl:value-of select="$nextStep" />');</xsl:attribute>
    </xsl:element>
  
  </xsl:template>

  <!--
    @purpose  : individual Button Template 
    @notes    : wrapper id is a munged value using button id + 'Wrapper'  
  -->
  <xsl:template name="wizardButton">
    <xsl:param name="id" />
    <xsl:param name="wrapperClass" />
    <xsl:param name="wrapperStyle" />
    <xsl:param name="disabled" select="false" />
    <xsl:param name="buttonText" />
    <xsl:param name="onclick" select="''" />
    
    <xsl:variable name="wrapperId" select="concat($id, 'Wrapper')" />

    <xsl:element name="div">
      <xsl:attribute name="id"><xsl:value-of select="$wrapperId"/></xsl:attribute>
      <xsl:attribute name="class"><xsl:value-of select="$wrapperClass"/></xsl:attribute>
      <xsl:if test="$wrapperStyle != ''">
        <xsl:attribute name="style"><xsl:value-of select="$wrapperStyle"/></xsl:attribute>
      </xsl:if>

      <div><div>
      <xsl:element name="button">
        <xsl:attribute name="class">hpButton</xsl:attribute>
        <xsl:attribute name="id"><xsl:value-of select="$id"/></xsl:attribute>
        <xsl:attribute name="style">width:70px;</xsl:attribute>
        <xsl:if test="$disabled = 'true'">
          <xsl:attribute name="disabled"></xsl:attribute>
        </xsl:if>
        <xsl:if test="$onclick != ''">
          <xsl:attribute name="onclick"><xsl:value-of select="$onclick"/></xsl:attribute>
        </xsl:if>
        <xsl:value-of select="$buttonText" />
      </xsl:element>
      </div></div> 
    </xsl:element>   
    
  </xsl:template>

  <!--
    @purpose  : automatically adds a left or right arrow to the next and previous button text.
    @notes    : all other buttons get normal string values.
  -->
  <xsl:template name="adjustButtonText">
    <xsl:param name="stringKey" select="''" />

    <xsl:choose>
      <xsl:when test="$stringKey='next'">
        <xsl:value-of select="concat($stringsDoc//value[@key='next'], ' ', $stringsDoc//value[@key='rightArrow'])"/>
      </xsl:when>
      <xsl:when test="$stringKey='previous'">
        <xsl:value-of select="concat($stringsDoc//value[@key='leftArrow'], ' ', $stringsDoc//value[@key='previous'])"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$stringsDoc//value[@key=$stringKey]"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
	
</xsl:stylesheet>

