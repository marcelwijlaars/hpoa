digraph x509_functions {
    rankdir=TB;
    fontname="Arial";
    node [shape=box, style=filled, fontname="Arial", fontsize=11];
    edge [fontname="Arial", fontsize=9];
    
    // Add page title
    label="X509.c Function Hierarchy with OpenSSL-Style Names";
    labelloc="t";
    fontsize=20;
    
    // Main entry point
    "Main_Validation" [fillcolor=lightblue, label="Main Validation Entry\n(FUN_1000ca0c)"];
    
    // Core X509 functions
    subgraph cluster_x509 {
        label="X.509 Certificate Operations";
        style=filled;
        color=lightgreen;
        bgcolor=aliceblue;
        
        "PEM_read_bio_X509" [fillcolor=lightgreen];
        "X509_add_cert_to_stack" [fillcolor=lightgreen];
        "PEM_read_bio_X509_AUX" [fillcolor=lightgreen];
        "X509_get_embedded_cert" [fillcolor=lightgreen];
        "X509_certificate_compare" [fillcolor=lightgreen];
        "X509_verify_signature" [fillcolor=lightgreen];
        "X509_parse_signed_file" [fillcolor=lightgreen];
        "X509_extract_fingerprint_block" [fillcolor=lightgreen];
        "X509_split_certificate_chain" [fillcolor=lightgreen];
        "X509_parse_fingerprint" [fillcolor=lightgreen];
        "X509_set_fingerprint_data" [fillcolor=lightgreen];
        "X509_set_file_offset" [fillcolor=lightgreen];
        "X509_set_block_length" [fillcolor=lightgreen];
        "X509_get_embedded_signing_cert_data" [fillcolor=lightgreen];
    }
    
    // String handling
    subgraph cluster_string {
        label="String Handling";
        style=filled;
        color=lavender;
        bgcolor=lavenderblush;
        
        "OPENSSL_str2bool" [fillcolor=lavender];
        "OPENSSL_bool2str" [fillcolor=lavender];
        "OPENSSL_ui2str" [fillcolor=lavender];
        "OPENSSL_strlwr" [fillcolor=lavender];
        "trimSpaces" [fillcolor=lavender];
        "truncateSpaces" [fillcolor=lavender];
    }
    
    // Base64 operations
    subgraph cluster_base64 {
        label="Base64 Operations";
        style=filled;
        color=lightcyan;
        bgcolor=azure;
        
        "BIO_base64_encode_block" [fillcolor=lightcyan];
        "BIO_base64_encode" [fillcolor=lightcyan];
        "BIO_base64_decode" [fillcolor=lightcyan];
        "BIO_base64_char_value" [fillcolor=lightcyan];
        "BIO_base64_decode_block" [fillcolor=lightcyan];
    }

    // PEM operations
    subgraph cluster_pem {
        label="PEM Operations";
        style=filled;
        color=palegreen;
        bgcolor=honeydew;
        
        "PEM_find_section_length" [fillcolor=palegreen];
        "PEM_buffer_append" [fillcolor=palegreen];
    }
    
    // Memory management
    subgraph cluster_memory {
        label="Memory Management";
        style=filled;
        color=lightyellow;
        bgcolor=lemonchiffon;
        
        "OPENSSL_malloc_wrapper" [fillcolor=lightyellow];
        "OPENSSL_free_wrapper" [fillcolor=lightyellow];
    }

    // Message digest
    subgraph cluster_digest {
        label="Message Digest";
        style=filled;
        color=lightcoral;
        bgcolor=mistyrose;
        
        "EVP_get_digestbytype" [fillcolor=lightcoral];
    }
    
    // Main relationships
    "Main_Validation" -> "X509_parse_signed_file";
    "Main_Validation" -> "X509_get_embedded_cert";
    "Main_Validation" -> "X509_certificate_compare";
    "Main_Validation" -> "X509_verify_signature";
    
    // X509 operations
    "X509_parse_signed_file" -> "X509_set_file_offset";
    "X509_parse_signed_file" -> "PEM_find_section_length";
    "X509_parse_signed_file" -> "X509_set_block_length";
    "X509_parse_signed_file" -> "X509_extract_fingerprint_block";
    
    "X509_extract_fingerprint_block" -> "X509_set_fingerprint_data";
    "X509_extract_fingerprint_block" -> "X509_split_certificate_chain";
    "X509_extract_fingerprint_block" -> "X509_parse_fingerprint";
    
    "X509_split_certificate_chain" -> "PEM_read_bio_X509_AUX";
    "X509_split_certificate_chain" -> "X509_add_cert_to_stack";
    "X509_split_certificate_chain" -> "PEM_buffer_append";
    
    // Base64 relationships
    "BIO_base64_encode" -> "BIO_base64_encode_block";
    "BIO_base64_decode" -> "BIO_base64_char_value";
    "BIO_base64_decode" -> "BIO_base64_decode_block";
    
    // String handling
    "trimSpaces" -> "truncateSpaces";
    "OPENSSL_str2bool" -> "OPENSSL_strlwr";
    "OPENSSL_str2bool" -> "trimSpaces";
    
    // Memory management
    "X509_parse_fingerprint" -> "OPENSSL_malloc_wrapper";
    "X509_extract_fingerprint_block" -> "OPENSSL_malloc_wrapper";
    "X509_parse_fingerprint" -> "OPENSSL_free_wrapper";
}
