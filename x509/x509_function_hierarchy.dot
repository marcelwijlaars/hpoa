digraph x509_functions {
    rankdir=TB;
    fontname="Arial";
    node [shape=box, style=filled, fontname="Arial", fontsize=11];
    edge [fontname="Arial", fontsize=9];
    
    // Color scheme
    // Main entry point: lightblue
    // Core X509 functions: lightgreen
    // Message digest functions: lightcoral
    // Memory management: lightyellow
    // String handling: lavender
    // Base64 handling: lightcyan
    // Cleanup functions: mistyrose
    // Utility functions: wheat
    
    // Add page title
    label="X509.c Function Hierarchy";
    labelloc="t";
    fontsize=20;
    
    // Main entry point
    "FUN_1000ca0c" [fillcolor=lightblue, label="FUN_1000ca0c\n(Main validation entry)"];
    
    // Core X509 functions
    subgraph cluster_x509 {
        label="X.509 Certificate Operations";
        style=filled;
        color=lightgreen;
        bgcolor=aliceblue;
        
        "PEM_read_bio_X509" [fillcolor=lightgreen];
        "X509_add_cert_to_stack" [fillcolor=lightgreen, label="X509_add_cert_to_stack\n(FUN_1000b770)"];
        "PEM_read_bio_X509_AUX" [fillcolor=lightgreen, label="PEM_read_bio_X509_AUX\n(FUN_1000b9f4)"];
        "X509_get_embedded_cert" [fillcolor=lightgreen, label="X509_get_embedded_cert\n(FUN_1000bac8)"];
        "X509_certificate_compare" [fillcolor=lightgreen, label="X509_certificate_compare\n(FUN_1000ddd4)"];
        "X509_verify_signature" [fillcolor=lightgreen, label="X509_verify_signature\n(FUN_1000dc8c)"];
        "X509_parse_signed_file" [fillcolor=lightgreen, label="X509_parse_signed_file\n(FUN_1000d6e0)"];
        "X509_extract_fingerprint_block" [fillcolor=lightgreen, label="X509_extract_fingerprint_block\n(FUN_1000d368)"];
        "X509_split_certificate_chain" [fillcolor=lightgreen, label="X509_split_certificate_chain\n(FUN_1000cff0)"];
    }
    
    // Message digest functions
    subgraph cluster_digest {
        label="Message Digest Functions";
        style=filled;
        color=lightcoral;
        bgcolor=mistyrose;
        
        "EVP_get_digestbytype" [fillcolor=lightcoral, label="EVP_get_digestbytype\n(FUN_1000d988)"];
        "FUN_1000da30" [fillcolor=lightcoral, label="FUN_1000da30\n(Initialize message digest)"];
        "FUN_1000dae4" [fillcolor=lightcoral, label="FUN_1000dae4\n(Update message digest)"];
    }
    
    // Memory management functions
    subgraph cluster_memory {
        label="Memory Management";
        style=filled;
        color=lightyellow;
        bgcolor=lemonchiffon;
        
        "FUN_1000c6f4" [fillcolor=lightyellow, label="FUN_1000c6f4\n(Memory allocation)"];
        "FUN_1000c7dc" [fillcolor=lightyellow, label="FUN_1000c7dc\n(Memory free)"];
    }
    
    // String handling functions
    subgraph cluster_string {
        label="String Handling";
        style=filled;
        color=lavender;
        bgcolor=lavenderblush;
        
        "trimSpaces" [fillcolor=lavender];
        "truncateSpaces" [fillcolor=lavender];
        "FUN_1000be80" [fillcolor=lavender, label="FUN_1000be80\n(Convert to lowercase)"];
    }
    
    // Base64 functions
    subgraph cluster_base64 {
        label="Base64 Functions";
        style=filled;
        color=lightcyan;
        bgcolor=azure;
        
        "FUN_1000c09c" [fillcolor=lightcyan, label="FUN_1000c09c\n(Base64 encoding helper)"];
        "FUN_1000bf58" [fillcolor=lightcyan, label="FUN_1000bf58\n(Base64 encode)"];
        "FUN_1000c18c" [fillcolor=lightcyan, label="FUN_1000c18c\n(Base64 decode)"];
        "FUN_1000c384" [fillcolor=lightcyan, label="FUN_1000c384\n(Base64 char conversion)"];
        "FUN_1000c488" [fillcolor=lightcyan, label="FUN_1000c488\n(Base64 block decode)"];
    }
    
    // Cleanup functions
    subgraph cluster_cleanup {
        label="Cleanup Functions";
        style=filled;
        color=mistyrose;
        bgcolor=seashell;
        
        "FUN_1000de80" [fillcolor=mistyrose, label="FUN_1000de80\n(Close and cleanup)"];
        "FUN_1000e38c" [fillcolor=mistyrose, label="FUN_1000e38c\n(Close signed hash)"];
        "FUN_1000ce10" [fillcolor=mistyrose, label="FUN_1000ce10\n(Release certificate)"];
    }
    
    // Utility functions
    subgraph cluster_utility {
        label="Utility Functions";
        style=filled;
        color=wheat;
        bgcolor=oldlace;
        
        "FUN_1000bc00" [fillcolor=wheat, label="FUN_1000bc00\n(String to boolean)"];
        "FUN_1000bdd4" [fillcolor=wheat, label="FUN_1000bdd4\n(Boolean string conversion)"];
        "FUN_1000be20" [fillcolor=wheat, label="FUN_1000be20\n(Int to string)"];
        "FUN_1000ce94" [fillcolor=wheat, label="FUN_1000ce94\n(Find block length)"];
        "FUN_1000d22c" [fillcolor=wheat, label="FUN_1000d22c\n(Append PEM buffer)"];
        "FUN_1000d4dc" [fillcolor=wheat, label="FUN_1000d4dc\n(Parse fingerprint)"];
        "FUN_1000b538" [fillcolor=wheat, label="FUN_1000b538\n(Set fingerprint)"];
        "FUN_1000b5f0" [fillcolor=wheat, label="FUN_1000b5f0\n(Set offset)"];
        "FUN_1000b6b0" [fillcolor=wheat, label="FUN_1000b6b0\n(Set length)"];
        "FUN_1000cd38" [fillcolor=wheat, label="FUN_1000cd38\n(Get embedded cert)"];
    }
    
    // Main function relationships
    "FUN_1000ca0c" -> "X509_parse_signed_file";
    "FUN_1000ca0c" -> "X509_get_embedded_cert";
    "FUN_1000ca0c" -> "X509_certificate_compare";
    "FUN_1000ca0c" -> "FUN_1000da30";
    "FUN_1000ca0c" -> "FUN_1000dae4";
    "FUN_1000ca0c" -> "X509_verify_signature";
    "FUN_1000ca0c" -> "FUN_1000de80";
    
    // X509 certificate operations
    "X509_parse_signed_file" -> "FUN_1000b5f0";
    "X509_parse_signed_file" -> "FUN_1000ce94";
    "X509_parse_signed_file" -> "FUN_1000b6b0";
    "X509_parse_signed_file" -> "X509_extract_fingerprint_block";
    
    "X509_extract_fingerprint_block" -> "FUN_1000b538";
    "X509_extract_fingerprint_block" -> "X509_split_certificate_chain";
    "X509_extract_fingerprint_block" -> "FUN_1000d4dc";
    
    "X509_split_certificate_chain" -> "PEM_read_bio_X509_AUX";
    "X509_split_certificate_chain" -> "X509_add_cert_to_stack";
    "X509_split_certificate_chain" -> "FUN_1000d22c";
    
    "X509_add_cert_to_stack" -> "PEM_read_bio_X509";
    "PEM_read_bio_X509_AUX" -> "PEM_read_bio_X509";
    "X509_get_embedded_cert" -> "PEM_read_bio_X509";
    "X509_get_embedded_cert" -> "FUN_1000cd38";
    
    // Message digest operations
    "FUN_1000da30" -> "EVP_get_digestbytype";
    "FUN_1000dae4" -> "FUN_1000c6f4";
    "FUN_1000dae4" -> "FUN_1000c7dc";
    
    // String handling relationships
    "trimSpaces" -> "truncateSpaces";
    
    // Base64 relationships
    "FUN_1000bf58" -> "FUN_1000c09c";
    "FUN_1000c18c" -> "FUN_1000c384";
    "FUN_1000c18c" -> "FUN_1000c488";
    "FUN_1000c488" -> "FUN_1000c384";
    
    // Cleanup relationships
    "FUN_1000de80" -> "FUN_1000c7dc";
    "FUN_1000de80" -> "FUN_1000e38c";
    "FUN_1000e38c" -> "FUN_1000c7dc";
    "FUN_1000ce10" -> "FUN_1000c7dc";
    
    // Memory management relationships
    "X509_extract_fingerprint_block" -> "FUN_1000c6f4";
    "X509_extract_fingerprint_block" -> "FUN_1000c7dc";
    "X509_split_certificate_chain" -> "FUN_1000c6f4";
    "X509_split_certificate_chain" -> "FUN_1000c7dc";
    "FUN_1000bc00" -> "FUN_1000c6f4";
    "FUN_1000bc00" -> "FUN_1000c7dc";
    
    // Utility relationships
    "FUN_1000bc00" -> "FUN_1000be80";
    "FUN_1000bc00" -> "trimSpaces";
    "FUN_1000d4dc" -> "FUN_1000c6f4";
    "FUN_1000d4dc" -> "FUN_1000c7dc";
    "FUN_1000d4dc" -> "FUN_1000c18c";
}

